<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.peppa.dal.dao.UserDOMapper">


  <resultMap id="BaseResultMap" type="com.peppa.dal.model.UserDO">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="salt" jdbcType="VARCHAR" property="salt" />
    <result column="state" jdbcType="CHAR" property="state" />
  </resultMap>

  <!--根据主键查询用户所拥有角色，权限的集=集合-->
  <resultMap id="BaseUserInfoResultMap" type="com.peppa.dal.model.UserInfo">
      <id column="userId" jdbcType="INTEGER" property="userId" />
      <result column="userName" jdbcType="VARCHAR" property="userName" />
      <result column="phone" jdbcType="VARCHAR" property="userPhone" />
      <result column="password" jdbcType="VARCHAR" property="password" />
      <result column="salt" jdbcType="VARCHAR" property="salt" />
      <result column="state" jdbcType="CHAR" property="state" />
      <collection property="roleInfoList" ofType="com.peppa.dal.model.RoleInfo">
        <id column="roleId" jdbcType="INTEGER" property="roleId" />
        <result column="roleName" jdbcType="VARCHAR" property="roleName" />
        <result column="description" jdbcType="VARCHAR" property="description" />
        <result column="roleAvailable" jdbcType="INTEGER" property="roleAvailable" />
        <collection property="permissionDOList" ofType="com.peppa.dal.model.PermissionDO">
          <id column="permissionId" jdbcType="INTEGER" property="id" />
          <result column="permissionName" jdbcType="VARCHAR" property="name" />
          <result column="url" jdbcType="VARCHAR" property="url" />
          <result column="method" jdbcType="VARCHAR" property="method" />
          <result column="desc" jdbcType="VARCHAR" property="desc" />
          <result column="permissionAvailable" jdbcType="INTEGER" property="available" />
        </collection>
      </collection>
  </resultMap>


  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>


  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>


  <sql id="Base_Column_List">
    id, name, phone, password, salt, state
  </sql>


  <select id="selectUserInfoByUserPhone" parameterType="java.lang.String" resultMap="BaseUserInfoResultMap">
        select
        user.id as userId,user.name as userName,user.phone,user.salt,user.state,user.password,
        role.id as roleId,role.name as roleName,role.description,role.available as roleAvailable,
        permission.id as permissionId,permission.name as permissionName,permission.url,
        permission.method,permission.`desc`,permission.available as permissionAvailable
        from user,role,permission,user_role,role_permission
        where
        user.phone = #{phone,javaType=STRING} and  user.id = user_role.user_id and role.id = user_role.role_id
        and role.id = role_permission.role_id and permission.id = role_permission.permission_id;
  </select>


  <select id="selectByExample" parameterType="com.peppa.dal.model.UserDOExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>


  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user
    where id = #{id,jdbcType=INTEGER}
  </select>



  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user
    where id = #{id,jdbcType=INTEGER}
  </delete>


  <delete id="deleteByExample" parameterType="com.peppa.dal.model.UserDOExample">
    delete from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>


  <insert id="insert" parameterType="com.peppa.dal.model.UserDO">
    insert into user (id, name, phone,
      password, salt, state)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR},
      #{password,jdbcType=VARCHAR}, #{salt,jdbcType=VARCHAR}, #{state,jdbcType=CHAR})
  </insert>


  <insert id="insertSelective" parameterType="com.peppa.dal.model.UserDO">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="salt != null">
        salt,
      </if>
      <if test="state != null">
        state,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="salt != null">
        #{salt,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        #{state,jdbcType=CHAR},
      </if>
    </trim>
  </insert>


  <select id="countByExample" parameterType="com.peppa.dal.model.UserDOExample" resultType="java.lang.Long">
    select count(*) from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>


  <update id="updateByExampleSelective" parameterType="map">
    update user
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null">
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.salt != null">
        salt = #{record.salt,jdbcType=VARCHAR},
      </if>
      <if test="record.state != null">
        state = #{record.state,jdbcType=CHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>


  <update id="updateByExample" parameterType="map">
    update user
    set id = #{record.id,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      phone = #{record.phone,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      salt = #{record.salt,jdbcType=VARCHAR},
      state = #{record.state,jdbcType=CHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>


  <update id="updateByPrimaryKeySelective" parameterType="com.peppa.dal.model.UserDO">
    update user
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="salt != null">
        salt = #{salt,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=CHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>


  <update id="updateByPrimaryKey" parameterType="com.peppa.dal.model.UserDO">
    update user
    set name = #{name,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      salt = #{salt,jdbcType=VARCHAR},
      state = #{state,jdbcType=CHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

</mapper>